# Generated by Django 2.1.7 on 2019-03-19 15:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import recommend.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('access_code', models.CharField(max_length=300, verbose_name='Spotify API access code')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', recommend.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('song_id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='Song ID')),
                ('title', models.CharField(max_length=200, verbose_name='Song title')),
                ('artist', models.CharField(max_length=200, verbose_name='Artist name')),
                ('album', models.CharField(max_length=200, verbose_name='Album name')),
                ('release_date', models.IntegerField(verbose_name='Year of release')),
                ('acousticness', models.FloatField(max_length=10, verbose_name='Acousticness')),
                ('danceability', models.FloatField(max_length=10, verbose_name='Danceability')),
                ('energy', models.FloatField(max_length=10, verbose_name='Energy')),
                ('instrumentalness', models.FloatField(max_length=10, verbose_name='Instrumentalness')),
                ('key', models.FloatField(max_length=10, verbose_name='Key')),
                ('liveness', models.FloatField(max_length=10, verbose_name='Liveness')),
                ('loudness', models.FloatField(max_length=10, verbose_name='Loudness')),
                ('mode', models.FloatField(max_length=10, verbose_name='Mode')),
                ('speechiness', models.FloatField(max_length=10, verbose_name='Speechiness')),
                ('tempo', models.FloatField(max_length=10, verbose_name='Tempo')),
                ('valence', models.FloatField(max_length=10, verbose_name='Valence')),
            ],
        ),
        migrations.CreateModel(
            name='UserTopTracks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_range', models.CharField(max_length=11, verbose_name='Time range')),
                ('song_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.Song')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='usertoptracks',
            unique_together={('user_id', 'song_id', 'time_range')},
        ),
    ]
